<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<!-- namespace 속성은 현재 XML 파일을 나타내는 ID와 같은 정보 -->
<mapper namespace="com.jk.model.StoreMapper">

	<!-- 파트너 전환 & 가게 등록 -->
	<insert id="storeRegist" parameterType="member">
	call p_save_store(null,#{member_id},null,
	null,null,null,null,null,
	null,null,null,null,null)	
		
	<!--  	insert into store(member_id, store_c_date)
		values (#{member_id}, now()) -->
	</insert>
	
	
	<!--  가게 정보 불러오기 -->
	<select id="selectStore" parameterType="store" resultType="store">
	select * from store where store_code = #{store_code}
	</select>	
	
	<!--  login 시 아이디 값으로 파트너 가게 정보 불러오기 -->
	<select id="selectStoreById" parameterType="store" resultType="store">
	select * from store where member_id = #{member_id}
	</select>
	
	<!-- 가게 정보 수정 -->
	<update id="storeInfo" parameterType="store">
	UPDATE store SET
	store_title = #{store_title}, zip_no = #{zip_no},
	roadaddrpart1 = #{roadaddrpart1}, loc_code = #{loc_code}, addrdetail = #{addrdetail}, roadaddrpart2 =#{roadaddrpart2},
	store_address = #{store_address}, store_tel = #{store_tel}, store_info = #{store_info},
	store_image = #{store_image}, store_type = #{store_type}, store_parking = #{store_parking},
	store_o_time = #{store_o_time}, store_b_time = #{store_b_time}, store_website = #{store_website},
	store_u_date = now()		
	WHERE store_code = #{store_code}
	 
	</update>
	
	
	<!-- 로그인 -->
	<select id="partnerLogin" parameterType="partner" resultType="partner">
		select * from jk.partner
		where partner_id = #{partner_id}
	</select>
	
	<!-- 파트너 로그인 체크 -->
	<select id="partner_logincheck" parameterType="member" resultType="member">
		SELECT *
		FROM member
		WHERE member_id = #{member_id}
		AND member_pw = #{member_pw}
		AND member_type = 1
	</select>	
	
	
	
	
	
	
	
	<!-- 사업자페이지 -->
	<select id="partnerPage" parameterType="partner" resultType="partner">
		select * from jk.partner
		where partner_id = #{partner_id}
	</select>
	
	<!-- 사업자정보수정 -->
	<select id="partnerUpdate" parameterType="partner" resultType="partner">
		
	</select>
	
	<!-- 사업자탈퇴 -->
	<delete id="partnerDelete" parameterType="partner">
		delete from jk.partner
		where partner_id = #{partner_id}
	</delete>
	
	
	
	<!-- 스토어 메뉴 불러오기 -->
	<select id="selectStoreMenu" parameterType = "menu" resultType="menu">
		select * from food_menu
		where store_code = #{store_code}
	</select>
	
	<!--  스토어 코드와 메뉴 코드로 메뉴 불러오기 -->
	<select id="selectMenu" parameterType="menu" resultType="menu">
	select * from food_menu
	where store_code = #{store_code} and
	fm_code = #{fm_code}
	</select>
	
	
<!-- 알러지 불러오기 -->
<select id="callAllergy" resultType="allergy" >
select * from allergy
</select>
	
<!--  메뉴 정보 수정하기 -->	
<update id="modifyMenu" parameterType="menu">
update food_menu set
fm_name = #{fm_name}, fm_price = #{fm_price}, fm_kcal = #{fm_kcal},
fm_info = #{fm_info}, fm_allergy = #{fm_allergy}, fm_image = #{fm_image}
where store_code = #{store_code} and fm_code = #{fm_code}
</update>
	
<insert id="addMenu" parameterType="menu">
insert into food_menu
(store_code, fm_name, fm_price, fm_kcal,fm_info, fm_allergy, fm_image) 
values 
(#{store_code}, #{fm_name}, #{fm_price}, 
#{fm_kcal}, #{fm_info}, #{fm_allergy}, #{fm_image})
</insert>

<!-- 메뉴삭제 -->
<delete id="menuDelete" parameterType="menu">
DELETE FROM food_menu
WHERE store_code = #{store_code} AND fm_code = #{fm_code} 
</delete>


<!--  검색  -->
<select id="search" parameterType="map" resultType="store">

call p_syn_search (#{value}, #{allergy})

</select>





</mapper>









